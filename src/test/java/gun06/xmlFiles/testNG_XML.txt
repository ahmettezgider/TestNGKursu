
<!--
    Bir texstNG xml dosyasi suite ile baslar
    suite en az bir test"den olusur. Daha fazla test olabilir
    testler icinde calistirilacak class
    Suite
        test

        /test

    /Suite
-->


<!--    Örnek   -->
<!--------------------------------------------------------->
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >
<suite name="Suite1" verbose="1" >
  <test name="Nopackage" >
    <classes>
       <class name="NoPackageTest" />
    </classes>
  </test>

  <test name="Regression1">
    <classes>
      <class name="test.sample.ParameterSample"/>
      <class name="test.sample.ParameterTest"/>
    </classes>
  </test>
</suite>


<!--    Test icerisinde package belirlenebilir.
        O paket altindaki class ve testler calisir
-->
<!--------------------------------------------------------->
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >

<suite name="Suite1" verbose="1" >
  <test name="Regression1"   >
    <packages>
      <package name="test.sample" />
   </packages>
 </test>
</suite>



<!--    Gruplar belirlenebilir ve classlar icinde methodlar
        dahil (include) ya da haric(exclude) tutulabilir
-->
<!--------------------------------------------------------->
<test name="Regression1">
  <groups>
    <run>
      <exclude name="brokenTests"  />
      <include name="checkinTests"  />
    </run>
  </groups>

  <classes>
    <class name="test.IndividualMethodsTest">
      <methods>
        <include name="testMethod" />
      </methods>
    </class>
  </classes>
</test>



<!--    preserve-order="false" olursa class ve methodlar öngörülemeyen sirada calisirlar   -->
<!--------------------------------------------------------->
<test name="Regression1" preserve-order="false">
  <classes>

    <class name="test.Test1">
      <methods>
        <include name="m1" />
        <include name="m2" />
      </methods>
    </class>

    <class name="test.Test2" />

  </classes>
</test>


<!--    asagidaki durumda, xml de "functest" include edildigi icin
        grup isminde "functest" olan methodlar calisir
-->
<!--------------------------------------------------------->
public class Test1 {
  @Test(groups = { "functest", "checkintest" })
  public void testMethod1() {
  }

  @Test(groups = {"functest", "checkintest"} )
  public void testMethod2() {
  }

  @Test(groups = { "functest" })
  public void testMethod3() {
  }
}


<test name="Test1">
  <groups>
    <run>
      <include name="functest"/>
    </run>
  </groups>
  <classes>
    <class name="example1.Test1"/>
  </classes>
</test>



<!--    sadece windows, ya da linux da test yapmak isteniyorsa
        grup isimleri windows.checkintest ya da linux.checkintest olarak verilebilir ve
        asagidaki xml"de oldugu gibi <include name="windows.*"/> seklinde * ile regex kullanilabilir
-->
<!--------------------------------------------------------->
@Test
public class Test1 {
  @Test(groups = { "windows.checkintest" })
  public void testWindowsOnly() {
  }

  @Test(groups = {"linux.checkintest"} )
  public void testLinuxOnly() {
  }

  @Test(groups = { "windows.functest" )
  public void testWindowsToo() {
  }
}


<test name="Test1">
  <groups>
    <run>
      <include name="windows.*"/>
    </run>
  </groups>

  <classes>
    <class name="example1.Test1"/>
  </classes>
</test>


<!--    Method isismlerinde de regex kullanilabilir
        (.* : sifir ya da daha fazla karakter)
-->
<!--------------------------------------------------------->
<test name="Test1">
  <classes>
    <class name="example1.Test1">
      <methods>
        <include name=".*enabledTestMethod.*"/>
        <exclude name=".*brokenTestMethod.*"/>
      </methods>
     </class>
  </classes>
</test>


<!--    Örnek   -->
<!--------------------------------------------------------->
<test name="Regression1">
  <groups>
    <define name="functest">
      <include name="windows"/>
      <include name="linux"/>
    </define>

    <define name="all">
      <include name="functest"/>
      <include name="checkintest"/>
    </define>

    <run>
      <include name="all"/>
    </run>
  </groups>

  <classes>
    <class name="test.sample.Test1"/>
  </classes>
</test>


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->


<!--    Örnek   -->
<!--------------------------------------------------------->




